<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACDIgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAACI9SURBVHja7Z0JXJRXlvar0+ms832/zGS6Zybf9Ndf93w9Set0DJv7EiObuAFFse8g
        ILiLGjXuS4LGRI0mcYsx7oogEPe4x31JUKImbnHfEQUEtzpz7q23sMwYhbfe2qjn6d/ThYSC2s7/nnvO
        vffV6SAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
        giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
        giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiDINVXVnWAndzX7WgrpVjcj3QqvWti7dj9X
        4Em63Baky/MhBII7A+B2d2rAt1HsSNj5zACIZABEMAAiOHAjC7xrYS8y8M92YQet8KR27Mb89V/Zr7Ff
        5eB/aeXf6Tf8/f8Bj3wP09eQ+2QAA9h32VWw87m6B1UxAG6vbkpVHJi19W12BfsWu4x9jX2BfZy9i53H
        /oQ9gGGh58D/e74X/Z5vn6/JEJQsYe1fSVfUCECozwAYzCbYOc0AIAYAMQCIA9MWrmRfYh9gz2P3Y7fj
        TOLfijzoWUsgrGEgFCE7AADgegWAx1lkDQfZM9iJ7NcLvem5mmkCu+DvpFtqAAwAALg+AsDSd9mn2F+x
        YxkAf1zelH4jYSAyAg/TVAECAOD6CQBLV7MPsScwCJozAF40g2CFh+kWAgDg+gsAS19hL2Z35sD/3+Za
        QaG3qV4AAQBw/QaA2aLT8DVbX2ABgpVtSJf3JkAAAMD1HQBmi7ZjoVx74E0viGJhHk8J8jEtAABgtwCA
        2TfYX+R7kdfMN0zFwnwfU/cAAgDg+g8As0XnYGCBN/1eQgDZAAAAuxUAhO+x13M20C73TXpGgODob0wZ
        AQQAwPUfAGZfZA/mbOCf5BJjdAoAANitAGDOBsQehLfyzBBAXcDFAZDFznSAs6wIKkc9ZpXPqVYA8GR7
        PMGeFnY8CEp49A8ubGKaEoi9BdORDbggAPgDe3soUcVUO3saUeU4/vs9VD7md/l3THHA436KxWv5OAg8
        FQAc1Ku6EK3vxs4weV0am++zNp7vF060sgNRkS9RYWuigqam++S/ZQEHxywi6st/+2WRBcjlxE0AAdcC
        AI9a5fOJSkvt6+tlRDe38t/vre4xi+AvvcS+Yf/H/iSXL1AygboCgIN420SikjNGOnTKwifZx4108Ecj
        Ff9gpO/2GmnfOiPtXGSkbZOJNg4gWhNN9LWvAgUPuwNBbFuelO9D/yQygdVtSVeI4qCLAWARB2Ql+7Yd
        XUVUtpP/fh+VAJhqCn67PuanmV/D8sXqAfDtFCMdvmakHy4/wVdMPnzVdFtyjuFwzEgHdhlpF0Nh80j+
        GxGcJbSymFLYHgb3xSYjzgL+XewjyGcQ5HkAAq4HAHtaCwCUPgw8Z7F1ACBTYF+qoy9bQOEiA+Gokfau
        MdLWCZwdRHFm0NxuIChg/7lAOZEIHQIAAACwBwB+BQjiawGD3XlG2pBtmibYoYi4kv0fIgso8MFaAZur
        Oqvm4MlBAAAA8GswKDlrpP1beIowxkgrgyy6DraBwGoGwF/EdCDPH4VBm+pOJunK+kkAjAcAAICnZgUX
        TPWCLWM4I/Cz6dRghTi8VCwbLnoTLULbjP7KcdPsP/OH7CAAAADUygoI9m/mqUE/osIWCgi0h8BcBoBc
        NYgzCG0x+nP6X9pLjv4D2Q8AAACgriA4dNpIu5YYaU2ETaYFojvwcb43vWQ+XwCyzeh/SPWKOgDAfQFg
        MTX4/nsjbR7B2UBLzbMBsU5gIGcCz4qaAM4ddKbRX7gX0c1NDggkAMA5AGCRDYhC4a6FRlrVWXMIiLMF
        EkhnOm8Q24mdaPSvnGBaUQcAuDkALj1cbHRgm5HWpWo+JTjLvyuwyAdXLXKu0X+jg4IIAHA+AFhkA8Ul
        Rto4iKigiaYQENco8LK8YhHkjqM/AODcADAXCE8YaWuOspJQOwhs4t/1F3nycBPSLW0ICLjf6A8AOD8A
        lCmB2Jwk9ijI4qB2EFjCo//vzYeKQO42+gMArgEAMwTOMgSmaQqBB+zJ+Z70Ur4n6gHuN/oDAK4DAAsI
        bJtspIJmmkEA7UGVGYDrj/4AgGsBwAyB00baMo6ooLFmEEB7sC5SRv8BLj/6AwCuBwAFAqIwKLoDGq4R
        kO1BcYiIvAAJagJPzAD+yh+mYpcf/QEA1wSAuUV42CiPLtO8PagAANOBXxF/kMax77n86A8AuC4AFAiI
        o8nEYSMarhjcJLcQoz34RABcqhejPwDg2gBQILBvg5FWdtIUAmgPPgUAVC9GfwDA9QGg1ATEaUNF7WzT
        HsxHe1AjADjb6A8A1A8AXDKdQbhjttF0poCG7cE8L3o2H1uINQKAs43+AED9AYCyRmDreE33Dcj2oI7Q
        HrQeAMpFNG6cBAAAAJdqD55hoz2oCQD4jSn9GQAAAGzcHvzBKK9ohPYgAAAAuBsAzO3BPbZpD8p6QDM3
        bw8CAACAS7QHv9G+PchZwD/LcwW9AQAAAABw/vbgchu0B73oJZEJuG17EAAAAFyqPTgL7UEAAABwTwCg
        PQgAAABuDABbtwcbu2F7EAAAANAeNLUH892xPQgAAABoD7pxexAAAADQHnTj9iAA4AYAuFZPAWDL3YPu
        0h60BgA3Tikf0gonMQdu2Q4NAOBEwS+el7jOoloAiEM35ZV7L9Zfl1ww0vaZmp4wbGoPisNFlfag2Tvb
        km5VE3JzAHQ3BVn5bPZCJzIHSgWPeFU9VUJtKP+OBaYR12nMz6lynOnx1RkAHAxrYog2jzTSpuFUb715
        hKkr8LWvpkXBUnYG+9/Zr7Jfym30KAzqBRysOhAk00mt9vlkOenzyXr8430qAJQsIP8t97DGlyEXrmT/
        zN7NzmVPZPdlR7Cbsv+vy8PBKgDADnWtAADbwmKKcL1ewAGBBADAbgwHBBIAALsxHBBIAADsxnBAIAEA
        sBvDAYEEAMDuCwcAAACA3QsOH7J7sUMFHAAAAAB2PxuVNQ7XAAAAAHZjAwAAAAwAwAAADADAAAAMAMAA
        AAwAwAAADADAAAAMAMAAAAwAwAAADADAAAAMAMAAAAwAwAAADADAAAAMAMAAAAwAwAAADADAAAAMAMAA
        AAwAwAAADADAAADsFAC417GIVLnLOqpOL0cgOgEA1jAACjyJCr20dQECxLnN7/nKNtfpwKCpdHBEjirr
        yLM/1d3ZZGwyiqpTrlBVDwSiwwDAPptyi3LarqShLXNpWKvlmnloq1z6tGkJIODEzmcArG1/ki4WtqTr
        m1+n65veqLN15DWQ6u4BZGw6BgBwsO+wf0w9R4agZPILCCH/gFDN7BvYhd5tvQAAcHYABJ6kCyvepmsb
        G9K1Df9VZwMALg+A8xQRlMpBq6eAgDDNLIAyqNVCAAAAAAAAABgAAAAAABgAAAAAABgAcCkAVD/BAAAA
        UPAYAwAuCoBqJTDuKv++lXWXrmdV0pXMW3Qp86b0Zf76amYF3ciqporuD+TP33FBKAAA1gV7ntd9WuZd
        RUu8y2mRTxkt9Lkhbxf73KSl3pWU631H3qfQScEAAPwi6Cu635cB/n3aT1SUvJFmxS+mCTGf0dCo8ZQd
        OZJ6RbxHPSOGUJ/IYfRu1DgaEz2ZpsZ9SYsTi2hr6j46lXFJQqHaAggAQP0JehHscxtfoI+a7ZLrHHq3
        +YzS2r5PCe8Moeh2/SjStzdF+fah2HYDKPmdEZT19kc0oPVcGttiDX3W9IiEg4CGs8DA7QEgAuB2dyNd
        6FZKm1P30CcczH0jh1O8oQcZ9KkUrE+gEH1ijUP1SdIh0qbviZ8R34sKy6D08P40OnqSBEJJ+kkqYxg4
        MwgAgNoEfTXNbHKChrfMp65tx5LeL4M6+EfL1+tpayf8pEMoMCCcOvsnUky7bAmN8c230nyfa5TvZXTo
        6+O2ADCN9g/oaPppmpOwjHpHDKXIsPRHAl2vT66TH8IhUf47ydCbxsV8QutTdsgpgzNODwCAXw/+xT63
        aELzbZTRNodC/FLlczIFtnid6v5aifv5K0AI8o+UmcLA1l8xXI7XZAUAgB1SfXF7OP0UfRY/n7qGZ9cE
        bWgdA742QBC/V4BlcNT7tDblW1lLuAMAOHXgi7l7TotNnMIPV0b6UM1fG0uYhPqlUd82M2SWYe+MwK0A
        IIL/YmYZLUn8Wqbq5hFbr3HgP85mEIyNmUIH0o5QJWcf1QCAUwV+vtcDnqcf5hF/PI/QUTJAA2wQ+I/P
        DPRyaiHqCqKQWOBSAFC7GaipfTYDmQPtQNpRei8qR87t7RX4j2YEJhAkG/rQwsRC2UW4AwA4RfAv8a7g
        4FsuU317Bf7jQBAYYJCZx6dNf7DzZqBWymagv9XRb5DuXvA3pMr6rVSdUWnz4L+ZdVdW9NM43TfPzx1p
        AZ9whtD4mE/peMZ5h2YCDzcDJZFvQLAMWq3cLrAzvdt6vlMDQDy2OY3PUubbE6l9QIRNUn01UwO9XzqN
        abFGthFt+vqJ7cCtbtCe3nNp/8DPVFknR3C1tnHwl2bdprkJubJC74hR/2kg6B85iorTjjkMAuLvnk4p
        oxHvLKLs1rMpu80Xmrlfm1k0udk+pwWAeFzTm/xI8e0GKaN+mNNYPJ4O/jESoKImYevXMN+D/ZY665x1
        5d7VzHL6NG4eRYR1dbrgt6wN9IgYQnu6ljgEAuYDQVY1NcoC1ArN7bzBP7VZsezbO1vwW04J2gdEygLh
        Yu9bTgtSnTMGf2lWFX3Gwe+o+X5dIZAVMUjWKKodBAB3OhJMBJIo9kX49nTa4H9ovVxDICBgj0zA5QFQ
        rSzdnZuwnEf+NKcPfksIiAVIR9J/tisE3A0AIoBmNjlJMe36u0DwP4SAqE8MarWAlnvfBQCe5lXJmyk6
        rJvLBL8lBIZHfyhXJVYDADYJ/gU+pZT6zmgXCv6H0wFRExjXYh0A8KTRX6zhN/f4XSn4LT0zfpHMYqoB
        AE0tRs/+redwQBlcKvgtC4Nhft3k9KUAAPifwS828QyLnmCzVl9oaNIjtlVnICYskzam7AIANB79xbLe
        jv6xNmv1+fvrH7GtIJDyzii5qagAAHjUyxJXy6KflgEfEpIobTCkUkxMJsXH96D4hJ4UG9edIiPTa35G
        SyAIgIn24Nlu12wOAXcAgAiUeY2vUGy7gZqm/iLI/fxC5W2HjlEUHBJv2ksSmkidu8RS+/bhpv+u/IxW
        f1cUBYe3XIEMwHIxy9H0M9QtfKAmqb85qKOju1Hf7FE09bP5lF+0iTbvKKY93x+jvQdP0I59R2jNht00
        d0EhjRo7hVJS+tbcVysQfJWQJ3cqAgBW9ri9HtDgVos0S/39/U0QCY9Mo36DcmjS9GU0v2AbFWw6RKu2
        /0grtx2h3LX7aeaitTR6wixKzRhAnTrH1MBCiyzA4JtFs5uccooswOEAEOvqZ/C8WYvgF4EfE5tJ43I+
        pQ1bD9CpCzfpWoWRblQT3ah6vC+WVtP3R87Ql/MLKKv7EE1AIJ5LRvgAOpZxzqbLhes7AESAzG58msJ8
        u1md+puDNy6pF338+VJav+cUfXe6ig5fITryOF8lKrn4gHb9dIMWr9xFA977kDODOJkRaFEUFPUMATe3
        BoBcysqjv1aFv+z+o2n95n0yqEVwl94mul75ZIufET8rvv7h+EWa+vkCCREtsgHRzrRlFlDfASAWN4n2
        mRbpvgheMaJv+u4s/XDJKAP/8GWSXz/J4mcEEAQsFhbtoK7d3tUEAAJqs5v87PAswOEZwDxOla0JfhGo
        Yo4/fuIMOnrqcq0D/3EW97188x4VrfmWunbNtgoC4tCR7hGD6XS3KzarBdRnAIjAmNv4otULfkTwR0Sl
        05fLNlLxuTsy8J8W9L8GAnHfrQcv0uCRk2WNIMDKKcHgVoudIgO47LjKfxn1ixxpVeVfBP/kaV/RmcsV
        NSO5NTbDY/P2Ykrn+Z81EAjXd6VVyVtsNg2o7wAY12K9XERjTfBHxWTS0jV7a4JYTfA/AgKGwN4Tt2hk
        zgwTBKyoBYijx+y5ffixAOBAbMIfpg/ZJ+2d/m9L3U/RVmz0EcGZM2E6nb5crnrUfxII1m3eSwmJvVRD
        QIDt/ZipVJZ1xyZZQH0GQK53tTzNR+3oL4JfH5Ys03YtAv+X2cDe47do0PBJVmQBpsVBHzfb7VgA8AdJ
        xx+kZ/gD2pC/Hsv+iW2sVj5gtvLtHg/o8/j5qkd/UfDr228UHT5xSZOR/3EWBcR5i76m8PCuqouBqeF9
        6XjGObprg9fwDvt6KgOg2a8fb+2KFqfwftHkDIX6dVVd/GsfFEGTZ+RSycX7mga/ZSawpfg8paYPUF0Y
        FHATuzhXKCcJOcK6yp4mCFT1IN3dLPoNB/5/lnej987G0v6fDFTONh4zEGnp4+zi8HLqZxijCgBiRBZt
        vjUbdtks+M1ZwM+XbtGQoRMkcNRAQOxpyA3fQSc0fg0V3yvufP/mIs9rN+Y2ulL+VaOr1ewHbHJlz29U
        SqOarpS76VQdZsIB2b3PSNp9rEzz0f+XEBAtxE6dY1W1COU04J2BNMvjNM1rdM2er/F9duVXja7c0AkR
        /6+qn5wO6Dj45XcKvelPPKr0LvCmvex7bNLK/Lvpi+anKCa4l6r0XwTj6LGf0PnrVZqn/o8rDK7btJei
        GDhqpgKhDLj3/Bfy8zaSlq+hYuNSj6p7kxoU3534t333Jv5t/4OP/rbfyCZXNj8X6tr8A3XpPwei6NuL
        1P/IFdsFv3kqcODnSur77gcSOmqmAZ384ml4o5X8vA/Y8zU28mt8n31X90uVBJPu5yjSfdOKdLvbkC7P
        k/7IIOjO3sm+o0mBx5NoYptvyRCqIrUOTabIqHRau3G3TUd/yyxAFBgHDclRlQUIAGR1mEBLfW7bZA63
        zKOKGAAyaOqLcxpup6g2fVWl/yIQs3oNk4U6W47+ZgvIzF+xjTp2jFZ1FFl7/wjq5z1HAsARr7Xu15Tv
        zcHP5g+ZrtCHb73pX/jrFPYWdpW1Fd4RvnkyOOocUCFJ1LP3MDpxrtTmo78lBOYvXqm6DpDQZSAtaHLd
        JsWeZZ71CwBihBr7XxspuJ36cw6nzMqzS/Cbs4AdR65RYkrfmlWGdZ0GdGv6cU3m4zQAqAGBl8wCJAgK
        fOTtq+xo9jp2hZoPbZ73fRoQMJtCwxJVpf8fT5lDV27dt0vwm6cBO/cfpbi47nWeBggARAf3pNnNTgEA
        tQTAsEZF1NEvrs4jqpiHB4ckUNGWH2ye/lv64Pl7NHTsNM4+QlQBILnlKPqwwR7nBIBZKxgC+W8pGYH4
        2pP+kb/WswvZt+rW4qmiXu0nqcoAhJcsXyeX99oLACIDEBlHZtYgFXWAJIoMyaRpLQ8CALUCwAEa5LmE
        gvyjVbX+YhN6yhHZXhmAnAZcJZr2ZaH69QCt36XxDXY4NwDMEtOCZaZMQEKBb/8XuyN7Cbu0Nh/apT6V
        1K3DB3UHAAdfVFSGLMrZY/5vCYBzVytp8HvjVdUBwkPTaVLr3QBALQHQ32sez40j1c3/e4+gfScr7AsA
        zjYWFm2njp2i67wuQExzIt/uQzkNv+Xnv9/5AVCTEQgINH0IAp4qvMRf+7G/Yl994jnuPuWU3nF0nQEg
        Rt/Y2CzatrvE7gAQ+wtGj/tEFQAMoWk0sc12AKCWABBFMVEcUwOA7ME5ct3+D3YGQN4331GX4Lg6twMF
        AMLb9qQPGm5zLQDU1AgYBMubW2QE3vQCf92GPZN94dcAkKYWAHFZtH3vYfsD4MYdGvv+NJUA6Cq7HgBA
        7QDQlwEQ6B+uCgD9h0yg78/YHwArNhYzAOJVAqCH6wLArMLGpNsZJgEgYcBg+B3f+rCnsM88OgWooIyO
        41QBQCwA2vjtd3YHwPlrVTRsxEcqpwBp9HHrnQBALQGQ7TVXdQbQK3uM7M3bewqwZPUeuf5ADQAi3u7N
        APjWtQFgVhEH/4LGD0FQ6EnP8u1b7Bz2Cfmh9amiHkETVRUBxeafFSs3U5mdi4A/X7xFvfoMp9A6AyCJ
        IkK70dRW3wEAtQTAQM+F8vp+dS6oMQCSu2bbfAXg44qAsxatU7U5SAAgps0AymnoIkXA2mrtm6Rb0oR0
        BTwtKGAYFDaiZ/gD25A9Yrn3ncP9Aj9/oAYAYgSePnuJ3YLf3AYsPnKGkpJ6q+oCRIX0oBktfgIAatkG
        fO+tfOroF6uqDRhmSKH1e0+p3var1u9P+lLVakDRBUhsNYwmNNhVvwBg1ggd6VY1rekYiFXGOg6Ev6Z1
        GlWgV7kMWKzKO3ul0m4LgQQAClZtVbUpSKwDiAvuR/OaXgYAagmA0X9fT519E1WtrAsKiqQ5SzfYbR2A
        yDT2nSinzF7DVAMgvdl4h73eOntKAGC5911dn/bTdDz6Z3GAGNVsBBKHe+468KPd6gCXyu7SBxM+V70U
        WBQ8ReETAKiN98uCmKFtD9VLgQcN/5iKz96x2/xfLDwSh4mqOzPQQL18pjvfUmBbKSQkXseBIezLvqn2
        HIBPpy+kq+UP7DL67zt4gpKT+6jeDNQ/YBbled+zzV4Az/q3F2BCg92U1HKEqs1AIggNEam0esdPdskC
        Dl24T2M+nK0y+PXUwS+GBnvkOu9SYFtIAcD/YR9WC4DUrtm0/9BJ22YBt01HhE3+ZK7qQ0F4CvBgsN/8
        3YWetJADdpHWXuZRtWRyg+Kl/GYuqS/+6I0Di9Ka5+ziIHmg9jCQkTnT6eC5uxykZNPRX4BGnDCsFgCd
        /OKvj3xzTT4DYLEjXmsHASBJ+HkOkIXWnAUo0nJbbgkWcNmw7QDFxXe35miwGzEhvXxP/4l+l+dBL2jp
        fHauR/WLnzQ49CK/mfXGK16j5zr7JbTjIClVCwCRkovWnK2KgeatwO/ydMOa48IDAwxLs5pNfmXqfx59
        wRGvtUMAEB6eqAsNTRFZQCb7vqrAEtuCI9NpUe4aORXQGgIi+Et+Ok99+o209oTg7aGGhFezA2aK/ROa
        O9ejSjelwUEdv5n1xpz+6/wDQ1/lANlhzfn/KekDaOOBM9pDgIO/hFP/qXNWyIuKBKg/svw+OyOsbXfd
        Bw23OeS1dmAGkMwQSH6Db09ZkwWIK/18vXa7PL5LKwiI4P/p9DUaMWqSFseDD+vUKUMXFpakg2onDl5d
        UFC8joNjuLXHgffuP5a2lVzWrB4gRn5xvYC5yzfJDo+VFws5yfd/nQGiCwwMda83mQNLFxKS+BwHyJfW
        XgkoMbEX5RVtktV6ayAg7lvKwX+IR/7hHPwaXCHoMkOuiYAdAFB7iYDg4BBuyr5i7Tn8AgIb9p82ZQJW
        LBASwV987q68apDekKLFlYLm+PuHPSeeq9vJYIgzFwOD1HYDHlkiHNONPp2xUI7cpXW8NoD54iACIOLC
        Ir37jtDqMmGixvGieJ5QXbOAMJ2fX9iLHByLtLgwSFLXfrTo652yPXikjiCQ1wRgbyu5ROM+miOvHahB
        8Jex2/Pv0XXpkuh+b7Ben2gGwD+wV2hxTcCwsBTqy3N2kQ2I/fvmdF6O7I9xzeXBbtyh3d8fo48mfyF3
        G2oU/GXsQM4AdLGx8YjoOqpFi2RzJhCoBIvV1wQUFwAdOmaa7Nt/d6aq5jJg5gD/pc3Thp1Hr9Osxetk
        TcHyMmNWOp/9D2L0b98+wj3f5ODgZDMEOlubBViuFBQr9sQoPvOLZbRx23d05ORlOn2pnM5duy039YhV
        hCfO35D9/dyCDTRm3FRKTOql9aXDF3Pa/3JYWDJnO0j/6ypf3wiZBbBf5iBZquUlwEPDkih78HiavmC1
        vCCoCPC9J8pp/6lKdgXtOXaTthRfoKWr91DOlHmUnNafgjpEanJdQIvRv5MyzXHfN1mMjqIgyIEi0uQv
        tLoyrxkE5t2DqZz+iWsIDBk2Qe7oGzjofXm6T3xCD7m5SOtLhLPPc+C30OtTdDExUYhmlXr77UhzLaAl
        +7zWlwYXm3fEsfSx/DnI6PEe9cweLY8TFyO96O2bd/dpGPhmzw4MlNMb9waAqSWYphOjJAfNW+zjWkLA
        PDUwXzLc0hqP9pYWy5tHc/A/I7IbgyERkaxSfn4GDhCDLjAw8rccKKPZRo0DsSYrEEAw21+5FLhGqf4v
        fZzdSAS+r68eb7JpaXCqUhdIzmBX2iAo7elv2K8pUxu8wVZ3BAzmLOA19nobBKQ9XSn6/uJ5cfbBNuAN
        FgoLSzHXAl5if+bCwX+S3VxkNF26IPi1Urt2wZwFCAjom4veuQsD4FP2S+K5BAaG4421VOfOqeaawB85
        iNa4YPCXsuMDAtLMi5zwpmrWEtRLALz5ZoDIBOLVLhF2sNfyc/ijyGj8/CLwpv5ScXFxuuDgaHM20EAs
        oXWh4K9g9w0NTX0Wqb+tpgKmgpmfn/5Zvu3NrnCh4N/JbiiCv1OnjuxOeEMfXw9Ikq1BpSjozd7tAsEv
        ahZDGVwviKo/gt/2EGA/zx7CLneB4N/H9hGPOzBQLw09QaZNQqlyqTAH05vsjU4c/NfZfdgvmEb+FLyB
        doIAp9MCAj3Z1504+DexPSzAhTew9kXBFHMm8B/sRey7Tljwi9PrE5D2OywTCBftwVilteZMgX+PvZj9
        /0XtQixoQvDXORNIlmukBQw4K3iFA2ww+4oTBP4D9jp2M9GnVs42wBvmEAiINQIdxdeN2WvUHiCiscXm
        pWEc+P8oHqO/fzgb7T5VCg5O1EVFpUsYBAcn/ZYDLYADb60Ds4GzYnsvP45/fZihIO13HAQMlv5XZfvw
        GQeO+hvE3gVfX8NvTdOUUPnYIA2yAYtlw69yEPZkH1R9mIi6Ft98U49frPATjyNGbmiCHA0BsWGok1IX
        CH2GR16xhXi+HWsDIus4yO7Dj+UPplHfZEhDiZE2NNTUY+/bt7MAwp+UAtw+9m0bBf4F5bwCX/77L5rn
        +pjvO3NdQK4ZEOvs32Z/qewhMNog8KuVCn82p/h/btEiWIdin92ygZqVg8L/xtYrm4mOKT15a+b3V9mb
        2IPYXvz3njf/raysTJ3BgJTfWRUUFKGLi+teA4L27Q3PMwzEuvv+SkX+ipKqqw3620rBcQ47kkf514KC
        9OauhDRkt4wg+REbDMnP8Sj9/5StxaPY+co04aKSwpcrPfvbCiTKlGAX1fzN7Blsca0CcYLPK3p9Ws3v
        HjVKgCcVL7qLyN8/kv//OgekaR+BKMLxXPwVtjf/O509nb1FWVZ8VdmeW6EEeKWyvkCsNrygpPdi7/5Y
        vr+eb//Cv/d3lqk+0n0HymBI1UVFdTO3DKW7dBEFuqSXea7+B/736+yW7A5KpmBgdxFpPd/HU1l6/AqP
        9M8+CpUEzPHr1dTAYLGGwCBWE75iWpob5sn2ZQfzvw18K4K8g7IF+XW+3x/4+y8HBUXVAEXctm+fInYp
        4gV2Nomz9zgbkLe/zBKeZFORMR5BX48lTt7p0CH6ERjU1uKg0i5d4vAiQhAEQRAEQRAEQRAEQRAEQRAE
        QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
        QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
        QRAEQRAEQRAEQRAEQZB99d8BTvY1NefsFAAAAABJRU5ErkJggg==
</value>
  </data>
</root>